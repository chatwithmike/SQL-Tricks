/*
	There was some unexpected behaviour in LAST_VALUE vs FIRST_VALUE. FIRST_VALUE windows just fine.
	LAST_VALUE on the other hand will default to a range of one row If you do not provide a RANGE for it.
*/
DECLARE @tbl TABLE (x INT ,y INT, z CHAR(1)); INSERT INTO @tbl(x,y,z) VALUES(1,10,'a'),(2,10,'b'),(3,10,'c'),(4,20,'d'),(5,20,'e'),(6,20,'f'); 
SELECT * FROM @tbl AS t;
SELECT 
	LAST_VALUE(x) OVER(ORDER BY z DESC)lst0
	,LAST_VALUE(x) OVER(PARTITION BY y ORDER BY z DESC)lst1
	,LAST_VALUE(x) OVER(PARTITION BY y ORDER BY z ASC)lst2
	,LAST_VALUE(x) OVER(PARTITION BY y ORDER BY z ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)lst3
	,FIRST_VALUE(x) OVER(PARTITION BY y ORDER BY z desc)frst1
	,FIRST_VALUE(x) OVER(PARTITION BY y ORDER BY z ASC)frst2
	,LAST_VALUE(x) OVER(PARTITION BY y ORDER BY z DESC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)lst3	
FROM @tbl AS t;


